import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.pipeline import make_pipeline

 import warnings
 warnings.filterwarnings('ignore')

boston_df = pd.read_csv(r"BostonHousing_exp-7.csv")
x_boston = boston_df[['RM']]
y_boston = boston_df['MEDV']

x_train, x_test, y_train, y_test = train_test_split(x_boston, y_boston, test_size=0.2, random_state=32)

lr = LinearRegression()
lr.fit(x_train, y_train)
y_pred = lr.predict(x_test)

print(f"Intercept:{lr.intercept_:.2f}")
print(f"Coefficients:{lr.coef_[0]:.2f}")
print(f"R^2 score:{r2_score(y_test, y_pred):.2f}")
print(f"Mean squared error:{mean_squared_error(y_test, y_pred):.2f}")

plt.figure(figsize=(6, 4))
plt.scatter(x_test, y_test, color='blue', label='Actual')
plt.plot(x_test, y_pred, color='red', label='Predicted')
plt.xlabel('Average number of rooms [RM]')
plt.ylabel('House price (in $1000s)')
plt.title('Linear Regression on Boston Housing Data')
plt.legend()
plt.tight_layout()
plt.show()
The predicted diagnosis for the new sample is: M
